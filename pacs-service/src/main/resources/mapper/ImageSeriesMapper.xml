<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hanglok.pacs.mapper.ImageSeriesMapper">

    <resultMap id="simpleDicomInfoMap" type="cn.hanglok.pacs.dto.SimpleSeriesOutDto">
        <id property="seriesId" column="id"/>
        <result property="institutionName" column="institution_name"/>
        <result property="patientNumber" column="patient_number"/>
        <result property="patientName" column="patient_name"/>
        <result property="patientSex" column="patient_sex"/>
        <result property="patientAge" column="patient_age"/>
        <result property="modality" column="modality"/>
        <result property="sliceThickness" column="slice_thickness"/>
        <result property="bodyPart" column="body_part"/>
        <result property="scanType" column="scan_type"/>
        <result property="createdAt" column="created_at"/>
    </resultMap>

    <sql id="SimpleSeriesList">
        image_series
        .
        id
        ,
	    image_series.series_description,
	    institution.institution_name,
	    institution_patient.patient_number,
	    institution_patient.patient_name,
	    institution_patient.patient_sex,
	    image_series.patient_age,
	    image_series.modality,
	    image_series.slice_thickness,
	    image_series.created_at,
        GROUP_CONCAT(DISTINCT image_scan_type.scan_type_name SEPARATOR ', ') as scan_type,
        GROUP_CONCAT(DISTINCT body_part.body_name SEPARATOR ', ') as body_part
    </sql>

    <select id="getSimpleSeriesList" resultMap="simpleDicomInfoMap">
        SELECT
        <include refid="SimpleSeriesList"/>
        FROM institution
        LEFT JOIN institution_patient ON institution.id = institution_patient.institution_id
        LEFT JOIN image_studies ON institution_patient.id = image_studies.patient_id
        LEFT JOIN image_series ON image_studies.id = image_series.study_id
        LEFT JOIN image_label ON image_series.id = image_label.series_id
        LEFT JOIN label_organ ON image_label.id = label_organ.label_id
        LEFT JOIN human_organ ON label_organ.organ_id = human_organ.id
        LEFT JOIN series_body_part ON image_series.id = series_body_part.series_id
        LEFT JOIN body_part ON series_body_part.body_part_id = body_part.id
        LEFT JOIN series_scan_type ON image_series.id = series_scan_type.series_id
        LEFT JOIN image_scan_type ON series_scan_type.scan_type_id = image_scan_type.id

        WHERE 1 = 1
        <if test="organIds != null">
            AND image_series.id IN (
            <foreach collection="organIds" item="organId" separator="INTERSECT">
                SELECT image_series.id
                FROM
                image_series
                LEFT JOIN image_label ON image_series.id = image_label.series_id
                LEFT JOIN label_organ ON image_label.id = label_organ.label_id
                LEFT JOIN human_organ ON label_organ.organ_id = human_organ.id
                where organ_id = #{organId}
                GROUP BY image_series.id, human_organ.id
            </foreach>
            )
        </if>
        <!--        <if test="keyword != null">-->
        <!--            AND (institution_patient.patient_number LIKE CONCAT('%', #{keyword}, '%') OR patient_name LIKE CONCAT('%',-->
        <!--            #{keyword}, '%'))-->
        <!--        </if>-->
        <if test="institutionIds != null">
            AND institution_id in(
            <foreach collection="institutionIds" item="institutionId" index="index" separator=",">
                #{institutionId, jdbcType=INTEGER}
            </foreach>
            )
        </if>
        <if test="modality != null">
            AND modality in(
            <foreach collection="modality" item="item" index="index" separator=",">
                #{item, jdbcType=INTEGER}
            </foreach>
            )
        </if>
        <if test="sliceRange != null">
            <if test="sliceRange.length == 1">
                AND slice_thickness = #{sliceRange[0]}
            </if>
            <if test="sliceRange.length == 2">
                AND slice_thickness BETWEEN #{sliceRange[0]} AND #{sliceRange[1]}
            </if>
        </if>
        <if test="patientSex != null">
            AND patient_sex = #{patientSex}
        </if>
        <if test="bodyPartIds != null">
            AND body_part_id in(
            <foreach collection="bodyPartIds" item="bodyPartId" index="index" separator=",">
                #{bodyPartId, jdbcType=INTEGER}
            </foreach>
            )
        </if>
        <if test="scanTypeIds != null">
            AND scan_type_id in(
            <foreach collection="scanTypeIds" item="scanTypeId" index="index" separator=",">
                #{scanTypeId, jdbcType=INTEGER}
            </foreach>
            )
        </if>
        GROUP BY image_series.id, institution.institution_name, institution_patient.patient_number,
        institution_patient.patient_name, institution_patient.patient_sex, image_scan_type.scan_type_name
        ORDER BY image_series.updated_at desc
    </select>

    <select id="getModality" resultType="java.lang.String">
        SELECT DISTINCT modality
        FROM image_series
    </select>

    <resultMap id="seriesTreeMap" type="cn.hanglok.pacs.entity.SeriesTree">
        <result property="institutionName" column="institution_name"/>
        <result property="patientNumber" column="patient_number"/>
        <result property="studyUid" column="study_uid"/>
        <result property="seriesUid" column="series_uid"/>
    </resultMap>

    <sql id="seriesTree">
        institution_name
        ,
        patient_number,
        study_uid,
        series_uid
    </sql>

    <select id="getTree" resultMap="seriesTreeMap">
        SELECT
        <include refid="seriesTree"/>
        FROM
        institution
        LEFT JOIN institution_patient ON institution.id = institution_patient.institution_id
        LEFT JOIN image_studies ON institution_patient.id = image_studies.patient_id
        LEFT JOIN image_series ON image_studies.id = image_series.study_id
        WHERE image_series.id = #{seriesId}
    </select>

    <update id="updateInstanceNum">
        UPDATE image_series
        <set>
            instance_num = #{instanceNum}
        </set>
        where id = #{seriesId}
    </update>

    <resultMap id="SeriesDetailOutDtoMap" type="cn.hanglok.pacs.dto.SeriesDetailOutDto">
        <constructor>
            <arg column="institution_name" javaType="java.lang.String" />
            <arg column="patient_number" javaType="java.lang.String" />
            <arg column="patient_name" javaType="java.lang.String" />
            <arg column="patient_sex" javaType="java.lang.String" />
            <arg column="body_part" javaType="java.lang.String" />
            <arg column="scan_type" javaType="java.lang.String" />
        </constructor>
    </resultMap>

    <select id="getSeriesDetail" resultMap="SeriesDetailOutDtoMap">
        SELECT image_series.*,
               institution.institution_name,
               institution_patient.patient_number,
               institution_patient.patient_name,
               institution_patient.patient_sex,
               GROUP_CONCAT(DISTINCT image_scan_type.id SEPARATOR ',') as scan_type,
               GROUP_CONCAT(DISTINCT body_part.id SEPARATOR ',') as body_part
        FROM institution
                 LEFT JOIN institution_patient ON institution.id = institution_patient.institution_id
                 LEFT JOIN image_studies ON institution_patient.id = image_studies.patient_id
                 LEFT JOIN image_series ON image_studies.id = image_series.study_id
                 LEFT JOIN image_label ON image_series.id = image_label.series_id
                 LEFT JOIN label_organ ON image_label.id = label_organ.label_id
                 LEFT JOIN human_organ ON label_organ.organ_id = human_organ.id
                 LEFT JOIN series_body_part ON image_series.id = series_body_part.series_id
                 LEFT JOIN body_part ON series_body_part.body_part_id = body_part.id
                 LEFT JOIN series_scan_type ON image_series.id = series_scan_type.series_id
                 LEFT JOIN image_scan_type ON series_scan_type.scan_type_id = image_scan_type.id

        WHERE image_series.id = #{seriesId}
        GROUP BY image_series.id, institution.institution_name, institution_patient.patient_number,
                 institution_patient.patient_name, institution_patient.patient_sex, image_scan_type.scan_type_name
        ORDER BY image_series.updated_at desc
    </select>

</mapper>
